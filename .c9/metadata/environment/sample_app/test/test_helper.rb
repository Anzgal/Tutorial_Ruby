{"filter":false,"title":"test_helper.rb","tooltip":"/sample_app/test/test_helper.rb","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":6,"column":0},"end":{"row":11,"column":3},"action":"remove","lines":["class ActiveSupport::TestCase","  fixtures :all","","","  # Add more helper methods to be used by all tests here...","end"],"id":6},{"start":{"row":6,"column":0},"end":{"row":13,"column":3},"action":"insert","lines":["class ActiveSupport::TestCase","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","end"]}],[{"start":{"row":6,"column":0},"end":{"row":13,"column":3},"action":"remove","lines":["class ActiveSupport::TestCase","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","end"],"id":7},{"start":{"row":6,"column":0},"end":{"row":28,"column":3},"action":"insert","lines":["class ActiveSupport::TestCase","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Log in as a particular user.","  def log_in_as(user)","    session[:user_id] = user.id","  end","end","","class ActionDispatch::IntegrationTest","","  # Log in as a particular user.","  def log_in_as(user, password: 'password', remember_me: '1')","    post login_path, params: { session: { email: user.email,","                                          password: password,","                                          remember_me: remember_me } }","  end","end"]}]]},"ace":{"folds":[],"scrolltop":101,"scrollleft":0,"selection":{"start":{"row":28,"column":3},"end":{"row":28,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1540774563622,"hash":"0f93c22320b5bc3d028d0248e8cf4b951bc38034"}